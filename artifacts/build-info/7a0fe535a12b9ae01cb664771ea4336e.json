{
	"id": "7a0fe535a12b9ae01cb664771ea4336e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MembershipSystem.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n\n/**\n * @title MembershipSystem\n * @dev A simple smart contract to manage members in a system.\n * Uses a mapping from address to bool to track membership status.\n */\ncontract MembershipSystem {\n    /**\n     * @dev Mapping to store membership status.\n     * members[address] = true  -> The address is a member\n     * members[address] = false -> The address is NOT a member\n     *\n     * We keep this mapping PRIVATE so that other contracts or users\n     * cannot directly access it. Instead, we provide the isMember() \n     * function as a controlled way to check membership status.\n     */\n    mapping(address => bool) private members;\n\n    /**\n     * @notice Add a new member to the system\n     * @dev \n     * - This function is marked as EXTERNAL because:\n     *   1. It is intended to be called from outside the contract (e.g., by a dApp or wallet).\n     *   2. `external` is slightly cheaper than `public` when passing arguments.\n     * - The function changes contract state (storage), so it cannot be `view` or `pure`.\n     *\n     * @param _member The address of the new member to add\n     */\n    function addMember(address _member) external {\n        members[_member] = true;\n    }\n\n    /**\n     * @notice Remove an existing member from the system\n     * @dev \n     * - This function is also EXTERNAL for the same reason as addMember.\n     * - It modifies the mapping, so it cannot be `view` or `pure`.\n     *\n     * @param _member The address of the member to remove\n     */\n    function removeMember(address _member) external {\n        members[_member] = false;\n    }\n\n    /**\n     * @notice Check if an address is a member\n     * @dev \n     * - This function is marked as VIEW because:\n     *   1. It only *reads* from the blockchain (storage).\n     *   2. It does not modify any state, so it costs no gas if called off-chain.\n     * - It is EXTERNAL so it can be queried by wallets, dApps, or other contracts.\n     * - It cannot be PURE because it reads from storage.\n     *\n     * @param _member The address to check\n     * @return bool True if _member is in the membership system, false otherwise\n     */\n    function isMember(address _member) external view returns (bool) {\n        return members[_member];\n    }\n\n    /**\n     * Example of a PURE function (not used in this contract):\n     * - PURE means it does not read or write to blockchain storage.\n     * - Only does calculations with input values.\n     */\n    function addNumbers(uint256 a, uint256 b) external pure returns (uint256) {\n        return a + b; // does not touch state\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MembershipSystem.sol": {
				"MembershipSystem": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_member",
									"type": "address"
								}
							],
							"name": "addMember",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "b",
									"type": "uint256"
								}
							],
							"name": "addNumbers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_member",
									"type": "address"
								}
							],
							"name": "isMember",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_member",
									"type": "address"
								}
							],
							"name": "removeMember",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A simple smart contract to manage members in a system. Uses a mapping from address to bool to track membership status.",
						"kind": "dev",
						"methods": {
							"addMember(address)": {
								"details": " - This function is marked as EXTERNAL because:   1. It is intended to be called from outside the contract (e.g., by a dApp or wallet).   2. `external` is slightly cheaper than `public` when passing arguments. - The function changes contract state (storage), so it cannot be `view` or `pure`.",
								"params": {
									"_member": "The address of the new member to add"
								}
							},
							"isMember(address)": {
								"details": " - This function is marked as VIEW because:   1. It only *reads* from the blockchain (storage).   2. It does not modify any state, so it costs no gas if called off-chain. - It is EXTERNAL so it can be queried by wallets, dApps, or other contracts. - It cannot be PURE because it reads from storage.",
								"params": {
									"_member": "The address to check"
								},
								"returns": {
									"_0": "bool True if _member is in the membership system, false otherwise"
								}
							},
							"removeMember(address)": {
								"details": " - This function is also EXTERNAL for the same reason as addMember. - It modifies the mapping, so it cannot be `view` or `pure`.",
								"params": {
									"_member": "The address of the member to remove"
								}
							}
						},
						"stateVariables": {
							"members": {
								"details": "Mapping to store membership status. members[address] = true  -> The address is a member members[address] = false -> The address is NOT a member We keep this mapping PRIVATE so that other contracts or users cannot directly access it. Instead, we provide the isMember()  function as a controlled way to check membership status."
							}
						},
						"title": "MembershipSystem",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MembershipSystem.sol\":223:2616  contract MembershipSystem {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MembershipSystem.sol\":223:2616  contract MembershipSystem {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0b1ca49a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa230c524\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xca6d56dc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xef9fc50b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/MembershipSystem.sol\":1543:1632  function removeMember(address _member) external {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/MembershipSystem.sol\":2178:2282  function isMember(address _member) external view returns (bool) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MembershipSystem.sol\":1159:1244  function addMember(address _member) external {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/MembershipSystem.sol\":2487:2614  function addNumbers(uint256 a, uint256 b) external pure returns (uint256) {... */\n    tag_6:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MembershipSystem.sol\":1543:1632  function removeMember(address _member) external {... */\n    tag_10:\n        /* \"contracts/MembershipSystem.sol\":1620:1625  false */\n      0x00\n        /* \"contracts/MembershipSystem.sol\":1601:1608  members */\n      0x00\n        /* \"contracts/MembershipSystem.sol\":1601:1617  members[_member] */\n      0x00\n        /* \"contracts/MembershipSystem.sol\":1609:1616  _member */\n      dup4\n        /* \"contracts/MembershipSystem.sol\":1601:1617  members[_member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MembershipSystem.sol\":1601:1625  members[_member] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MembershipSystem.sol\":1543:1632  function removeMember(address _member) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/MembershipSystem.sol\":2178:2282  function isMember(address _member) external view returns (bool) {... */\n    tag_13:\n        /* \"contracts/MembershipSystem.sol\":2236:2240  bool */\n      0x00\n        /* \"contracts/MembershipSystem.sol\":2259:2266  members */\n      0x00\n        /* \"contracts/MembershipSystem.sol\":2259:2275  members[_member] */\n      0x00\n        /* \"contracts/MembershipSystem.sol\":2267:2274  _member */\n      dup4\n        /* \"contracts/MembershipSystem.sol\":2259:2275  members[_member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MembershipSystem.sol\":2252:2275  return members[_member] */\n      swap1\n      pop\n        /* \"contracts/MembershipSystem.sol\":2178:2282  function isMember(address _member) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MembershipSystem.sol\":1159:1244  function addMember(address _member) external {... */\n    tag_18:\n        /* \"contracts/MembershipSystem.sol\":1233:1237  true */\n      0x01\n        /* \"contracts/MembershipSystem.sol\":1214:1221  members */\n      0x00\n        /* \"contracts/MembershipSystem.sol\":1214:1230  members[_member] */\n      0x00\n        /* \"contracts/MembershipSystem.sol\":1222:1229  _member */\n      dup4\n        /* \"contracts/MembershipSystem.sol\":1214:1230  members[_member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MembershipSystem.sol\":1214:1237  members[_member] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MembershipSystem.sol\":1159:1244  function addMember(address _member) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/MembershipSystem.sol\":2487:2614  function addNumbers(uint256 a, uint256 b) external pure returns (uint256) {... */\n    tag_22:\n        /* \"contracts/MembershipSystem.sol\":2552:2559  uint256 */\n      0x00\n        /* \"contracts/MembershipSystem.sol\":2582:2583  b */\n      dup2\n        /* \"contracts/MembershipSystem.sol\":2578:2579  a */\n      dup4\n        /* \"contracts/MembershipSystem.sol\":2578:2583  a + b */\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/MembershipSystem.sol\":2571:2583  return a + b */\n      swap1\n      pop\n        /* \"contracts/MembershipSystem.sol\":2487:2614  function addNumbers(uint256 a, uint256 b) external pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_32:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_34:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_35:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_51\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_34\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_36:\n        /* \"#utility.yul\":641:665   */\n      tag_53\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_35\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_54:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_37:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_56\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_36\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_9:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_59\n      tag_32\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":917:1036   */\n    tag_58:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_60\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_37\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_38:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_39:\n        /* \"#utility.yul\":1353:1374   */\n      tag_63\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_38\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_15:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_65\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1680   */\n    tag_40:\n        /* \"#utility.yul\":1640:1647   */\n      0x00\n        /* \"#utility.yul\":1669:1674   */\n      dup2\n        /* \"#utility.yul\":1658:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1603:1680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1808   */\n    tag_41:\n        /* \"#utility.yul\":1759:1783   */\n      tag_68\n        /* \"#utility.yul\":1777:1782   */\n      dup2\n        /* \"#utility.yul\":1759:1783   */\n      tag_40\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1752:1757   */\n      dup2\n        /* \"#utility.yul\":1749:1784   */\n      eq\n        /* \"#utility.yul\":1739:1802   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1798:1799   */\n      0x00\n        /* \"#utility.yul\":1795:1796   */\n      0x00\n        /* \"#utility.yul\":1788:1800   */\n      revert\n        /* \"#utility.yul\":1739:1802   */\n    tag_69:\n        /* \"#utility.yul\":1686:1808   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1814:1953   */\n    tag_42:\n        /* \"#utility.yul\":1860:1865   */\n      0x00\n        /* \"#utility.yul\":1898:1904   */\n      dup2\n        /* \"#utility.yul\":1885:1905   */\n      calldataload\n        /* \"#utility.yul\":1876:1905   */\n      swap1\n      pop\n        /* \"#utility.yul\":1914:1947   */\n      tag_71\n        /* \"#utility.yul\":1941:1946   */\n      dup2\n        /* \"#utility.yul\":1914:1947   */\n      tag_41\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1814:1953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2433   */\n    tag_21:\n        /* \"#utility.yul\":2027:2033   */\n      0x00\n        /* \"#utility.yul\":2035:2041   */\n      0x00\n        /* \"#utility.yul\":2084:2086   */\n      0x40\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2063:2070   */\n      dup6\n        /* \"#utility.yul\":2059:2082   */\n      sub\n        /* \"#utility.yul\":2055:2087   */\n      slt\n        /* \"#utility.yul\":2052:2171   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2090:2169   */\n      tag_74\n      tag_32\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2052:2171   */\n    tag_73:\n        /* \"#utility.yul\":2210:2211   */\n      0x00\n        /* \"#utility.yul\":2235:2288   */\n      tag_75\n        /* \"#utility.yul\":2280:2287   */\n      dup6\n        /* \"#utility.yul\":2271:2277   */\n      dup3\n        /* \"#utility.yul\":2260:2269   */\n      dup7\n        /* \"#utility.yul\":2256:2278   */\n      add\n        /* \"#utility.yul\":2235:2288   */\n      tag_42\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2225:2288   */\n      swap3\n      pop\n        /* \"#utility.yul\":2181:2298   */\n      pop\n        /* \"#utility.yul\":2337:2339   */\n      0x20\n        /* \"#utility.yul\":2363:2416   */\n      tag_76\n        /* \"#utility.yul\":2408:2415   */\n      dup6\n        /* \"#utility.yul\":2399:2405   */\n      dup3\n        /* \"#utility.yul\":2388:2397   */\n      dup7\n        /* \"#utility.yul\":2384:2406   */\n      add\n        /* \"#utility.yul\":2363:2416   */\n      tag_42\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2353:2416   */\n      swap2\n      pop\n        /* \"#utility.yul\":2308:2426   */\n      pop\n        /* \"#utility.yul\":1959:2433   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2439:2557   */\n    tag_43:\n        /* \"#utility.yul\":2526:2550   */\n      tag_78\n        /* \"#utility.yul\":2544:2549   */\n      dup2\n        /* \"#utility.yul\":2526:2550   */\n      tag_40\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2521:2524   */\n      dup3\n        /* \"#utility.yul\":2514:2551   */\n      mstore\n        /* \"#utility.yul\":2439:2557   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2563:2785   */\n    tag_24:\n        /* \"#utility.yul\":2656:2660   */\n      0x00\n        /* \"#utility.yul\":2694:2696   */\n      0x20\n        /* \"#utility.yul\":2683:2692   */\n      dup3\n        /* \"#utility.yul\":2679:2697   */\n      add\n        /* \"#utility.yul\":2671:2697   */\n      swap1\n      pop\n        /* \"#utility.yul\":2707:2778   */\n      tag_80\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2751:2757   */\n      dup5\n        /* \"#utility.yul\":2707:2778   */\n      tag_43\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2563:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2971   */\n    tag_44:\n        /* \"#utility.yul\":2839:2916   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2836:2837   */\n      0x00\n        /* \"#utility.yul\":2829:2917   */\n      mstore\n        /* \"#utility.yul\":2936:2940   */\n      0x11\n        /* \"#utility.yul\":2933:2934   */\n      0x04\n        /* \"#utility.yul\":2926:2941   */\n      mstore\n        /* \"#utility.yul\":2960:2964   */\n      0x24\n        /* \"#utility.yul\":2957:2958   */\n      0x00\n        /* \"#utility.yul\":2950:2965   */\n      revert\n        /* \"#utility.yul\":2977:3168   */\n    tag_30:\n        /* \"#utility.yul\":3017:3020   */\n      0x00\n        /* \"#utility.yul\":3036:3056   */\n      tag_83\n        /* \"#utility.yul\":3054:3055   */\n      dup3\n        /* \"#utility.yul\":3036:3056   */\n      tag_40\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3031:3056   */\n      swap2\n      pop\n        /* \"#utility.yul\":3070:3090   */\n      tag_84\n        /* \"#utility.yul\":3088:3089   */\n      dup4\n        /* \"#utility.yul\":3070:3090   */\n      tag_40\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3065:3090   */\n      swap3\n      pop\n        /* \"#utility.yul\":3113:3114   */\n      dup3\n        /* \"#utility.yul\":3110:3111   */\n      dup3\n        /* \"#utility.yul\":3106:3115   */\n      add\n        /* \"#utility.yul\":3099:3115   */\n      swap1\n      pop\n        /* \"#utility.yul\":3134:3137   */\n      dup1\n        /* \"#utility.yul\":3131:3132   */\n      dup3\n        /* \"#utility.yul\":3128:3138   */\n      gt\n        /* \"#utility.yul\":3125:3161   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":3141:3159   */\n      tag_86\n      tag_44\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3125:3161   */\n    tag_85:\n        /* \"#utility.yul\":2977:3168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207ce940405204967909089b9d54969a876bee85809de91f367d631eec3379e23a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506103e48061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80630b1ca49a1461004e578063a230c5241461006a578063ca6d56dc1461009a578063ef9fc50b146100b6575b5f5ffd5b61006860048036038101906100639190610257565b6100e6565b005b610084600480360381019061007f9190610257565b61013c565b604051610091919061029c565b60405180910390f35b6100b460048036038101906100af9190610257565b61018d565b005b6100d060048036038101906100cb91906102e8565b6101e4565b6040516100dd9190610335565b60405180910390f35b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b60015f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f81836101f1919061037b565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610226826101fd565b9050919050565b6102368161021c565b8114610240575f5ffd5b50565b5f813590506102518161022d565b92915050565b5f6020828403121561026c5761026b6101f9565b5b5f61027984828501610243565b91505092915050565b5f8115159050919050565b61029681610282565b82525050565b5f6020820190506102af5f83018461028d565b92915050565b5f819050919050565b6102c7816102b5565b81146102d1575f5ffd5b50565b5f813590506102e2816102be565b92915050565b5f5f604083850312156102fe576102fd6101f9565b5b5f61030b858286016102d4565b925050602061031c858286016102d4565b9150509250929050565b61032f816102b5565b82525050565b5f6020820190506103485f830184610326565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610385826102b5565b9150610390836102b5565b92508282019050808211156103a8576103a761034e565b5b9291505056fea26469706673582212207ce940405204967909089b9d54969a876bee85809de91f367d631eec3379e23a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3E4 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1CA49A EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xEF9FC50B EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x37B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x226 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236 DUP2 PUSH2 0x21C JUMP JUMPDEST DUP2 EQ PUSH2 0x240 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x251 DUP2 PUSH2 0x22D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C JUMPI PUSH2 0x26B PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x279 DUP5 DUP3 DUP6 ADD PUSH2 0x243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x296 DUP2 PUSH2 0x282 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AF PUSH0 DUP4 ADD DUP5 PUSH2 0x28D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C7 DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E2 DUP2 PUSH2 0x2BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x30B DUP6 DUP3 DUP7 ADD PUSH2 0x2D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x31C DUP6 DUP3 DUP7 ADD PUSH2 0x2D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x348 PUSH0 DUP4 ADD DUP5 PUSH2 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x385 DUP3 PUSH2 0x2B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x390 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3A8 JUMPI PUSH2 0x3A7 PUSH2 0x34E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xE940405204967909089B9D54969A876BEE85809DE91F367D631EEC3379 0xE2 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "223:2393:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addMember_20": {
									"entryPoint": 397,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addNumbers_61": {
									"entryPoint": 484,
									"id": 61,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isMember_46": {
									"entryPoint": 316,
									"id": 46,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeMember_33": {
									"entryPoint": 230,
									"id": 33,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3171:1",
										"nodeType": "YulBlock",
										"src": "0:3171:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1218:48:1",
													"nodeType": "YulBlock",
													"src": "1218:48:1",
													"statements": [
														{
															"nativeSrc": "1228:32:1",
															"nodeType": "YulAssignment",
															"src": "1228:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:1"
																		},
																		"nativeSrc": "1246:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nativeSrc": "1239:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:1",
														"nodeType": "YulTypedName",
														"src": "1200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:1",
														"nodeType": "YulTypedName",
														"src": "1210:7:1",
														"type": ""
													}
												],
												"src": "1176:90:1"
											},
											{
												"body": {
													"nativeSrc": "1331:50:1",
													"nodeType": "YulBlock",
													"src": "1331:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:1"
																		},
																		"nativeSrc": "1353:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:1"
																},
																"nativeSrc": "1341:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:1"
															},
															"nativeSrc": "1341:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:1",
														"nodeType": "YulTypedName",
														"src": "1319:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:1",
														"nodeType": "YulTypedName",
														"src": "1326:3:1",
														"type": ""
													}
												],
												"src": "1272:109:1"
											},
											{
												"body": {
													"nativeSrc": "1479:118:1",
													"nodeType": "YulBlock",
													"src": "1479:118:1",
													"statements": [
														{
															"nativeSrc": "1489:26:1",
															"nodeType": "YulAssignment",
															"src": "1489:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:1"
																},
																"nativeSrc": "1497:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:1"
																		},
																		"nativeSrc": "1572:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:1"
																},
																"nativeSrc": "1525:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:1"
															},
															"nativeSrc": "1525:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:1",
														"nodeType": "YulTypedName",
														"src": "1451:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:1",
														"nodeType": "YulTypedName",
														"src": "1474:4:1",
														"type": ""
													}
												],
												"src": "1387:210:1"
											},
											{
												"body": {
													"nativeSrc": "1648:32:1",
													"nodeType": "YulBlock",
													"src": "1648:32:1",
													"statements": [
														{
															"nativeSrc": "1658:16:1",
															"nodeType": "YulAssignment",
															"src": "1658:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1669:5:1",
																"nodeType": "YulIdentifier",
																"src": "1669:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1658:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1658:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1603:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1630:5:1",
														"nodeType": "YulTypedName",
														"src": "1630:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1640:7:1",
														"nodeType": "YulTypedName",
														"src": "1640:7:1",
														"type": ""
													}
												],
												"src": "1603:77:1"
											},
											{
												"body": {
													"nativeSrc": "1729:79:1",
													"nodeType": "YulBlock",
													"src": "1729:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1786:16:1",
																"nodeType": "YulBlock",
																"src": "1786:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1795:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1795:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1798:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1798:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1788:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1788:6:1"
																			},
																			"nativeSrc": "1788:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1788:12:1"
																		},
																		"nativeSrc": "1788:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1788:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1752:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1752:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1777:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1777:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1759:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1759:17:1"
																				},
																				"nativeSrc": "1759:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1759:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1749:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1749:2:1"
																		},
																		"nativeSrc": "1749:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1749:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1742:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:1"
																},
																"nativeSrc": "1742:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1742:43:1"
															},
															"nativeSrc": "1739:63:1",
															"nodeType": "YulIf",
															"src": "1739:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1686:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1722:5:1",
														"nodeType": "YulTypedName",
														"src": "1722:5:1",
														"type": ""
													}
												],
												"src": "1686:122:1"
											},
											{
												"body": {
													"nativeSrc": "1866:87:1",
													"nodeType": "YulBlock",
													"src": "1866:87:1",
													"statements": [
														{
															"nativeSrc": "1876:29:1",
															"nodeType": "YulAssignment",
															"src": "1876:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1898:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1898:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1885:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1885:12:1"
																},
																"nativeSrc": "1885:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1885:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1876:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1876:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1941:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1941:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1914:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1914:26:1"
																},
																"nativeSrc": "1914:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1914:33:1"
															},
															"nativeSrc": "1914:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1914:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1814:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1844:6:1",
														"nodeType": "YulTypedName",
														"src": "1844:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1852:3:1",
														"nodeType": "YulTypedName",
														"src": "1852:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1860:5:1",
														"nodeType": "YulTypedName",
														"src": "1860:5:1",
														"type": ""
													}
												],
												"src": "1814:139:1"
											},
											{
												"body": {
													"nativeSrc": "2042:391:1",
													"nodeType": "YulBlock",
													"src": "2042:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2088:83:1",
																"nodeType": "YulBlock",
																"src": "2088:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2090:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2090:77:1"
																			},
																			"nativeSrc": "2090:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2090:79:1"
																		},
																		"nativeSrc": "2090:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2090:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2063:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2063:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2072:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2059:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2059:3:1"
																		},
																		"nativeSrc": "2059:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2059:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2084:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2055:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2055:3:1"
																},
																"nativeSrc": "2055:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2055:32:1"
															},
															"nativeSrc": "2052:119:1",
															"nodeType": "YulIf",
															"src": "2052:119:1"
														},
														{
															"nativeSrc": "2181:117:1",
															"nodeType": "YulBlock",
															"src": "2181:117:1",
															"statements": [
																{
																	"nativeSrc": "2196:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2196:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2210:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2210:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2200:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2200:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2225:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2225:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2260:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2260:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2271:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2271:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2256:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2256:3:1"
																				},
																				"nativeSrc": "2256:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2280:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2280:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2235:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2235:20:1"
																		},
																		"nativeSrc": "2235:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2235:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2225:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2225:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2308:118:1",
															"nodeType": "YulBlock",
															"src": "2308:118:1",
															"statements": [
																{
																	"nativeSrc": "2323:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2323:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2337:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2337:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2327:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2327:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2353:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2353:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2388:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2388:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2399:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2399:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2384:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2384:3:1"
																				},
																				"nativeSrc": "2384:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2384:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2408:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2408:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2363:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2363:20:1"
																		},
																		"nativeSrc": "2363:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2363:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2353:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2353:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1959:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2004:9:1",
														"nodeType": "YulTypedName",
														"src": "2004:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2015:7:1",
														"nodeType": "YulTypedName",
														"src": "2015:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2027:6:1",
														"nodeType": "YulTypedName",
														"src": "2027:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2035:6:1",
														"nodeType": "YulTypedName",
														"src": "2035:6:1",
														"type": ""
													}
												],
												"src": "1959:474:1"
											},
											{
												"body": {
													"nativeSrc": "2504:53:1",
													"nodeType": "YulBlock",
													"src": "2504:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2521:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2521:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2544:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2544:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2526:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "2526:17:1"
																		},
																		"nativeSrc": "2526:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2526:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2514:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2514:6:1"
																},
																"nativeSrc": "2514:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2514:37:1"
															},
															"nativeSrc": "2514:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "2514:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2439:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2492:5:1",
														"nodeType": "YulTypedName",
														"src": "2492:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2499:3:1",
														"nodeType": "YulTypedName",
														"src": "2499:3:1",
														"type": ""
													}
												],
												"src": "2439:118:1"
											},
											{
												"body": {
													"nativeSrc": "2661:124:1",
													"nodeType": "YulBlock",
													"src": "2661:124:1",
													"statements": [
														{
															"nativeSrc": "2671:26:1",
															"nodeType": "YulAssignment",
															"src": "2671:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2683:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2683:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2694:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2694:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2679:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2679:3:1"
																},
																"nativeSrc": "2679:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2679:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2671:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2671:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2751:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2751:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2764:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2775:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2760:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:1"
																		},
																		"nativeSrc": "2760:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2707:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2707:43:1"
																},
																"nativeSrc": "2707:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2707:71:1"
															},
															"nativeSrc": "2707:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2707:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2563:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2633:9:1",
														"nodeType": "YulTypedName",
														"src": "2633:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2645:6:1",
														"nodeType": "YulTypedName",
														"src": "2645:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2656:4:1",
														"nodeType": "YulTypedName",
														"src": "2656:4:1",
														"type": ""
													}
												],
												"src": "2563:222:1"
											},
											{
												"body": {
													"nativeSrc": "2819:152:1",
													"nodeType": "YulBlock",
													"src": "2819:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2836:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2836:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2839:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2839:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:1"
																},
																"nativeSrc": "2829:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2829:88:1"
															},
															"nativeSrc": "2829:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2829:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2933:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2933:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2936:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2936:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2926:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2926:6:1"
																},
																"nativeSrc": "2926:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2926:15:1"
															},
															"nativeSrc": "2926:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2926:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2957:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2957:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2960:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2960:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2950:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2950:6:1"
																},
																"nativeSrc": "2950:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2950:15:1"
															},
															"nativeSrc": "2950:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2950:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2791:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2791:180:1"
											},
											{
												"body": {
													"nativeSrc": "3021:147:1",
													"nodeType": "YulBlock",
													"src": "3021:147:1",
													"statements": [
														{
															"nativeSrc": "3031:25:1",
															"nodeType": "YulAssignment",
															"src": "3031:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3054:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3054:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3036:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3036:17:1"
																},
																"nativeSrc": "3036:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3036:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3031:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3031:1:1"
																}
															]
														},
														{
															"nativeSrc": "3065:25:1",
															"nodeType": "YulAssignment",
															"src": "3065:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3088:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3088:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3070:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3070:17:1"
																},
																"nativeSrc": "3070:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3070:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3065:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3065:1:1"
																}
															]
														},
														{
															"nativeSrc": "3099:16:1",
															"nodeType": "YulAssignment",
															"src": "3099:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3110:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3110:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3113:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3113:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3106:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3106:3:1"
																},
																"nativeSrc": "3106:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3106:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3099:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3099:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3139:22:1",
																"nodeType": "YulBlock",
																"src": "3139:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3141:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3141:16:1"
																			},
																			"nativeSrc": "3141:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3141:18:1"
																		},
																		"nativeSrc": "3141:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3141:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3131:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3131:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3134:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3134:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3128:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3128:2:1"
																},
																"nativeSrc": "3128:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3128:10:1"
															},
															"nativeSrc": "3125:36:1",
															"nodeType": "YulIf",
															"src": "3125:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2977:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3008:1:1",
														"nodeType": "YulTypedName",
														"src": "3008:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3011:1:1",
														"nodeType": "YulTypedName",
														"src": "3011:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3017:3:1",
														"nodeType": "YulTypedName",
														"src": "3017:3:1",
														"type": ""
													}
												],
												"src": "2977:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80630b1ca49a1461004e578063a230c5241461006a578063ca6d56dc1461009a578063ef9fc50b146100b6575b5f5ffd5b61006860048036038101906100639190610257565b6100e6565b005b610084600480360381019061007f9190610257565b61013c565b604051610091919061029c565b60405180910390f35b6100b460048036038101906100af9190610257565b61018d565b005b6100d060048036038101906100cb91906102e8565b6101e4565b6040516100dd9190610335565b60405180910390f35b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b60015f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f81836101f1919061037b565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610226826101fd565b9050919050565b6102368161021c565b8114610240575f5ffd5b50565b5f813590506102518161022d565b92915050565b5f6020828403121561026c5761026b6101f9565b5b5f61027984828501610243565b91505092915050565b5f8115159050919050565b61029681610282565b82525050565b5f6020820190506102af5f83018461028d565b92915050565b5f819050919050565b6102c7816102b5565b81146102d1575f5ffd5b50565b5f813590506102e2816102be565b92915050565b5f5f604083850312156102fe576102fd6101f9565b5b5f61030b858286016102d4565b925050602061031c858286016102d4565b9150509250929050565b61032f816102b5565b82525050565b5f6020820190506103485f830184610326565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610385826102b5565b9150610390836102b5565b92508282019050808211156103a8576103a761034e565b5b9291505056fea26469706673582212207ce940405204967909089b9d54969a876bee85809de91f367d631eec3379e23a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1CA49A EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xEF9FC50B EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x37B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x226 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236 DUP2 PUSH2 0x21C JUMP JUMPDEST DUP2 EQ PUSH2 0x240 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x251 DUP2 PUSH2 0x22D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C JUMPI PUSH2 0x26B PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x279 DUP5 DUP3 DUP6 ADD PUSH2 0x243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x296 DUP2 PUSH2 0x282 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AF PUSH0 DUP4 ADD DUP5 PUSH2 0x28D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C7 DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E2 DUP2 PUSH2 0x2BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x30B DUP6 DUP3 DUP7 ADD PUSH2 0x2D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x31C DUP6 DUP3 DUP7 ADD PUSH2 0x2D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x348 PUSH0 DUP4 ADD DUP5 PUSH2 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x385 DUP3 PUSH2 0x2B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x390 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3A8 JUMPI PUSH2 0x3A7 PUSH2 0x34E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xE940405204967909089B9D54969A876BEE85809DE91F367D631EEC3379 0xE2 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "223:2393:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1543:89;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2178:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1159:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2487:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1543:89;1620:5;1601:7;:16;1609:7;1601:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1543:89;:::o;2178:104::-;2236:4;2259:7;:16;2267:7;2259:16;;;;;;;;;;;;;;;;;;;;;;;;;2252:23;;2178:104;;;:::o;1159:85::-;1233:4;1214:7;:16;1222:7;1214:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;1159:85;:::o;2487:127::-;2552:7;2582:1;2578;:5;;;;:::i;:::-;2571:12;;2487:127;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:77::-;1640:7;1669:5;1658:16;;1603:77;;;:::o;1686:122::-;1759:24;1777:5;1759:24;:::i;:::-;1752:5;1749:35;1739:63;;1798:1;1795;1788:12;1739:63;1686:122;:::o;1814:139::-;1860:5;1898:6;1885:20;1876:29;;1914:33;1941:5;1914:33;:::i;:::-;1814:139;;;;:::o;1959:474::-;2027:6;2035;2084:2;2072:9;2063:7;2059:23;2055:32;2052:119;;;2090:79;;:::i;:::-;2052:119;2210:1;2235:53;2280:7;2271:6;2260:9;2256:22;2235:53;:::i;:::-;2225:63;;2181:117;2337:2;2363:53;2408:7;2399:6;2388:9;2384:22;2363:53;:::i;:::-;2353:63;;2308:118;1959:474;;;;;:::o;2439:118::-;2526:24;2544:5;2526:24;:::i;:::-;2521:3;2514:37;2439:118;;:::o;2563:222::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2707:71;2775:1;2764:9;2760:17;2751:6;2707:71;:::i;:::-;2563:222;;;;:::o;2791:180::-;2839:77;2836:1;2829:88;2936:4;2933:1;2926:15;2960:4;2957:1;2950:15;2977:191;3017:3;3036:20;3054:1;3036:20;:::i;:::-;3031:25;;3070:20;3088:1;3070:20;:::i;:::-;3065:25;;3113:1;3110;3106:9;3099:16;;3134:3;3131:1;3128:10;3125:36;;;3141:18;;:::i;:::-;3125:36;2977:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "199200",
								"executionCost": "243",
								"totalCost": "199443"
							},
							"external": {
								"addMember(address)": "24824",
								"addNumbers(uint256,uint256)": "infinite",
								"isMember(address)": "2869",
								"removeMember(address)": "24779"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 223,
									"end": 2616,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 2616,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ce940405204967909089b9d54969a876bee85809de91f367d631eec3379e23a64736f6c634300081e0033",
									".code": [
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "B1CA49A"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "A230C524"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "CA6D56DC"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "EF9FC50B"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 2616,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1543,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1543,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2178,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2178,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2178,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1159,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1159,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2487,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2487,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2487,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1616,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2259,
											"end": 2275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1229,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2578,
											"end": 2583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1777,
											"end": 1782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1784,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1800,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1941,
											"end": 1946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1914,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2070,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2090,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2269,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2235,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2288,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2363,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 2433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2526,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2707,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2971,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2791,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2940,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2933,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2926,
											"end": 2941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 2964,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 2965,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3168,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2977,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3088,
											"end": 3089,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3090,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3070,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3138,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3161,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3125,
											"end": 3161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3141,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3161,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3125,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/MembershipSystem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addMember(address)": "ca6d56dc",
							"addNumbers(uint256,uint256)": "ef9fc50b",
							"isMember(address)": "a230c524",
							"removeMember(address)": "0b1ca49a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"addNumbers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple smart contract to manage members in a system. Uses a mapping from address to bool to track membership status.\",\"kind\":\"dev\",\"methods\":{\"addMember(address)\":{\"details\":\" - This function is marked as EXTERNAL because:   1. It is intended to be called from outside the contract (e.g., by a dApp or wallet).   2. `external` is slightly cheaper than `public` when passing arguments. - The function changes contract state (storage), so it cannot be `view` or `pure`.\",\"params\":{\"_member\":\"The address of the new member to add\"}},\"isMember(address)\":{\"details\":\" - This function is marked as VIEW because:   1. It only *reads* from the blockchain (storage).   2. It does not modify any state, so it costs no gas if called off-chain. - It is EXTERNAL so it can be queried by wallets, dApps, or other contracts. - It cannot be PURE because it reads from storage.\",\"params\":{\"_member\":\"The address to check\"},\"returns\":{\"_0\":\"bool True if _member is in the membership system, false otherwise\"}},\"removeMember(address)\":{\"details\":\" - This function is also EXTERNAL for the same reason as addMember. - It modifies the mapping, so it cannot be `view` or `pure`.\",\"params\":{\"_member\":\"The address of the member to remove\"}}},\"stateVariables\":{\"members\":{\"details\":\"Mapping to store membership status. members[address] = true  -> The address is a member members[address] = false -> The address is NOT a member We keep this mapping PRIVATE so that other contracts or users cannot directly access it. Instead, we provide the isMember()  function as a controlled way to check membership status.\"}},\"title\":\"MembershipSystem\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addMember(address)\":{\"notice\":\"Add a new member to the system\"},\"addNumbers(uint256,uint256)\":{\"notice\":\"Example of a PURE function (not used in this contract): - PURE means it does not read or write to blockchain storage. - Only does calculations with input values.\"},\"isMember(address)\":{\"notice\":\"Check if an address is a member\"},\"removeMember(address)\":{\"notice\":\"Remove an existing member from the system\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MembershipSystem.sol\":\"MembershipSystem\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MembershipSystem.sol\":{\"keccak256\":\"0x6d81a58a69900bd4f5c0d543811fcf8adbe9e6c5b5d7e5ffa1b178024f3d2a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e9eb83559b8ab61e0794539c81adc9aa9ab8492491a0166a6671eff9d0f461\",\"dweb:/ipfs/QmbGn4HSicpfZvnGyAN3mnLV2CUbfZ3Zruf3qAAGmZjq9e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/MembershipSystem.sol:MembershipSystem",
								"label": "members",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addMember(address)": {
								"notice": "Add a new member to the system"
							},
							"addNumbers(uint256,uint256)": {
								"notice": "Example of a PURE function (not used in this contract): - PURE means it does not read or write to blockchain storage. - Only does calculations with input values."
							},
							"isMember(address)": {
								"notice": "Check if an address is a member"
							},
							"removeMember(address)": {
								"notice": "Remove an existing member from the system"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MembershipSystem.sol": {
				"ast": {
					"absolutePath": "contracts/MembershipSystem.sol",
					"exportedSymbols": {
						"MembershipSystem": [
							62
						]
					},
					"id": 63,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MembershipSystem",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:164:0",
								"text": " @title MembershipSystem\n @dev A simple smart contract to manage members in a system.\n Uses a mapping from address to bool to track membership status."
							},
							"fullyImplemented": true,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "MembershipSystem",
							"nameLocation": "232:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "255:391:0",
										"text": " @dev Mapping to store membership status.\n members[address] = true  -> The address is a member\n members[address] = false -> The address is NOT a member\n We keep this mapping PRIVATE so that other contracts or users\n cannot directly access it. Instead, we provide the isMember() \n function as a controlled way to check membership status."
									},
									"id": 7,
									"mutability": "mutable",
									"name": "members",
									"nameLocation": "684:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 62,
									"src": "651:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 6,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "659:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "651:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 5,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "670:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "1204:40:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 13,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1214:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 15,
														"indexExpression": {
															"id": 14,
															"name": "_member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1214:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1214:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "1214:23:0"
											}
										]
									},
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "698:456:0",
										"text": " @notice Add a new member to the system\n @dev \n - This function is marked as EXTERNAL because:\n   1. It is intended to be called from outside the contract (e.g., by a dApp or wallet).\n   2. `external` is slightly cheaper than `public` when passing arguments.\n - The function changes contract state (storage), so it cannot be `view` or `pure`.\n @param _member The address of the new member to add"
									},
									"functionSelector": "ca6d56dc",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addMember",
									"nameLocation": "1168:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_member",
												"nameLocation": "1186:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1178:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1204:0:0"
									},
									"scope": 62,
									"src": "1159:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "1591:41:0",
										"statements": [
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 26,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1601:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 28,
														"indexExpression": {
															"id": 27,
															"name": "_member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1601:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1620:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1601:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "1601:24:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1250:288:0",
										"text": " @notice Remove an existing member from the system\n @dev \n - This function is also EXTERNAL for the same reason as addMember.\n - It modifies the mapping, so it cannot be `view` or `pure`.\n @param _member The address of the member to remove"
									},
									"functionSelector": "0b1ca49a",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeMember",
									"nameLocation": "1552:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "_member",
												"nameLocation": "1573:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1565:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1564:17:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:0:0"
									},
									"scope": 62,
									"src": "1543:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2242:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 41,
														"name": "members",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2259:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 43,
													"indexExpression": {
														"id": 42,
														"name": "_member",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2267:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2259:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 40,
												"id": 44,
												"nodeType": "Return",
												"src": "2252:23:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1638:535:0",
										"text": " @notice Check if an address is a member\n @dev \n - This function is marked as VIEW because:\n   1. It only *reads* from the blockchain (storage).\n   2. It does not modify any state, so it costs no gas if called off-chain.\n - It is EXTERNAL so it can be queried by wallets, dApps, or other contracts.\n - It cannot be PURE because it reads from storage.\n @param _member The address to check\n @return bool True if _member is in the membership system, false otherwise"
									},
									"functionSelector": "a230c524",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMember",
									"nameLocation": "2187:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "_member",
												"nameLocation": "2204:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2196:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:17:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2236:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 38,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:6:0"
									},
									"scope": 62,
									"src": "2178:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "2561:53:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 56,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "2578:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 57,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "2582:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2578:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 59,
												"nodeType": "Return",
												"src": "2571:12:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2288:194:0",
										"text": " Example of a PURE function (not used in this contract):\n - PURE means it does not read or write to blockchain storage.\n - Only does calculations with input values."
									},
									"functionSelector": "ef9fc50b",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addNumbers",
									"nameLocation": "2496:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2515:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2507:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2526:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2518:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:22:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2552:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2551:9:0"
									},
									"scope": 62,
									"src": "2487:127:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 63,
							"src": "223:2393:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2585:0"
				},
				"id": 0
			}
		}
	}
}